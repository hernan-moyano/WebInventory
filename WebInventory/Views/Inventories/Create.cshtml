@model WebInventory.Models.Inventory

@{
    ViewData["Title"] = "Create";
}

<h1>Registrar Movimiento</h1>


<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Date" class="control-label"></label>
                <input asp-for="Date" class="form-control" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Id_Deposito" class="control-label"></label>
                <select asp-for="Id_Deposito" asp-items="ViewBag.Deposits" class="form-control"></select>
                <span asp-validation-for="Id_Deposito" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Id_Product" class="control-label"></label>
                <select asp-for="Id_Product" asp-items="ViewBag.Products" class="form-control"></select>
                <span asp-validation-for="Id_Product" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Units" class="control-label"></label>
                <input asp-for="Units" class="form-control" />
                <span asp-validation-for="Units" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Unit_Cost" class="control-label"></label>
                <input asp-for="Unit_Cost" class="form-control" />
                <span asp-validation-for="Unit_Cost" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Crear" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Volver a la lista</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script>
        $.validator.methods.range = function (value, element, param) {
            var globalizedValue = value.replace(",", ".");
            return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
        }
        $.validator.methods.number = function (value, element) {
            return this.optional(element) || /-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
        }
        //Date dd/MM/yyyy
        $.validator.methods.date = function (value, element) {
            var date = value.split("/");
            return this.optional(element) || !/Invalid|NaN/.test(new Date(date[2], date[1], date[0]).toString());
        }
</script>

}
